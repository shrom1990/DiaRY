Description of test cases:
This folder has the examples and the Case Studies mentioned in the paper.

Example1-CollisionAvoidance:
There are two files in the folder Example1CollisionAvoidance
1. CollisionAvoidanceInfeasible.m : This is the original infeasible system described by Example 1 in Section 3.
2. CollsionAvoidanceCorrected.m : This is the feasible system corrected by the feedback provided by the tool. The algorithm for predicate repair can be found in Algorithm 3-Repair in Section 5.2.
Run (1) to execute the infeasible system and obtain feedback. Run (2) to execute the system corrected by the predicate feedback provided by (1).

Example2-Non-Adversarial Race Correcting Environment Assumption:
There are two files in the folder Example2NonAdversarialRaceEnv
1. ChangeEnvInfeasible.m : This is the original infeasible system described by Example 2 in Section 3. In this script we prefer to change the environment assumption.
2. ChangeEnvCorredted.m : This is the feasible system corrected by the feedback provided by the tool.
Run (1) to execute the infeasible system and obtain feedback. Run (2) to execute the system corrected by the predicate feedback provided by (1).

Example2-Non-Adversarial Race Correcting System Guarantee:
There are three files in the folder Example2NonAdversarialRaceCon
1. ChangeConInfeasible.m : This is the original infeasible system described by Example 2 in Section 3. In this script we prefer to change the system guarantee.
2. ChangeConCorrectedPred.m : This is the feasible system corrected by the predicate feedback provided by the tool.
3. ChangeConCorrectedTiming.m : This is the feasible system corrected by the timing feedback provided by the tool. The algorithm for timing repair can be found in Section 5.2.
Run (1) to execute the infeasible system and obtain feedback. Run (2) to execute the system corrected by the predicate feedback provided by (1). Run (3) to execute the system corrected by the timing feedback provided by (1).

Example3-Adversarial Race:
There are two files in the folder Example3AdversarialRace
1. AdversarialRaceInfeasible.m : This is the original infeasible system described in Example 3 in Saction 3. 
2. AdversarialRaceCorrected.m : This is the feasible system corrected by the Algorithm 4-DiagnosisRepairAdversarial described in Section 6.2.
Run (1) to execute the infeasible system and obtain feedback. Run (2) to execute the system corrected by the feedback provided by Algorithm 4.

CaseStudy1-LaneChange:
There are two files in the folder CaseStudyLaneChange
1. LaneChangeInfeasible.m : This is the original infeasible system described in Section 7.1.1. 
2. LaneChangeCorrected.m : This is feasible system with the updated STL shown in equation 29.
Run (1) to execute the infeasible system and obtain feedback. The script also outputs the infeasible scenario depicted by Figure 4a. Run(2) to execute the the system corrected by the predicate feedback provided by (1). Figure 4b is a snapshot of the feasible system from running (2).

CaseStudy2-Unprotected Left Turn:
There are two files in the folder CaseStudyLeftTurn
1. LeftTurnInfeasible.m : This is the original infeasible system described in Section 7.1.2. 
2. LeftTurnCorrected.m : This is feasible system with the updated STL shown in equation 30.
Run (1) to execute the infeasible system and obtain feedback. The script also outputs the infeasible scenario depicted by Figure 5a. Run(2) to execute the the system corrected by the predicate feedback provided by (1). Figure 5b is a snapshot of the feasible system from running (2).
On running (1), the feedback suggests adding a slack of 10.902 to the acceleration bound and a slack of 0.219 to the velocity bound. On updating the model with these slakcs, the system is found to infeasible once more and the feedback suggests adding an additional slack of 1.1903 to the velocity bounds. (2) is the model obtained by updating the acceleration and velocity bounds from both the runs of the diagnosis tool.

CaseStudy3-Aircraft ELectric Power System
CaseStudyEPS.m calls EPScontroller.m in '/Examples/EPSexample/'. 
EPScontroller.m describes the system in Section7.2. It also has a naive implemenation of Algorithm 4 to generate the necessary feedback. 
The feedback can be viewed by either running CaseStudyEPS.m or by running EPScontroller.m from '/Examples/EPSexample/'.

 
  



